---
description: Documentation Rules
globs: **/*.md
alwaysApply: false
---
# 開発ドキュメントの標準化

## 原則

- ドキュメントは簡潔かつ明瞭に記述する
- 熟達したエンジニアとして適切な文章を利用すること
- コードブロックを適切に使用し、実装例を明示する
- APIのリクエスト・レスポンスの例を記載する
- README.md にはプロジェクトの概要・セットアップ手順を記載する
- 設計方針で複数の手段が選択できる場合には選択肢をすべて提示すること
  - 選択肢の中で選んだ手段と選定理由を記載すること
  - 選択肢の中で選ばなかった手段の理由を記載すること
- 文書から得られるアウトプットが明確で、読み手のレベルによらず一定に伝わること
- 文書の目的を冒頭に簡潔に書くこと
- 具体的な数値を文章で説明すること

## ドキュメント構造
- 見出しの階層構造：論理的な構造を示すため、見出しレベル（#, ##, ###）を適切に活用する
- コードブロック：言語指定（```typescript, ```bash, ```json）を必ず行い、実行可能な形で提示する
- コマンド例：実際に実行できるコマンド例を記載し、オプションの説明を付ける
- セクション分け：目的、前提条件、手順、トラブルシューティングなど明確なセクションに分ける

## 設計ドキュメントの原則
- 要件・要望を初めに記載すること
- 設計方針には要件・要望を解決するための方針を記載すること
- 詳細設計には方針を実現する具体的な手段を記載すること

## フロントエンド 画面機能ドキュメントの原則
- ドキュメントは画面単位など、意味のある単位で分割すること
- コンポーネント（ボタン、インプットボックス）はすべて設計書で定義すること
- 各コンポーネントの操作時に発生するデータ操作・イベントを定義すること

## バックエンド WebAPIドキュメントの原則